//with the name of Allah the most merciful.
//Author : M.A. Jobayed Hossain.
#include<bits/stdc++.h>
 
using namespace std;
 
 
 
#define fastio() ios_base::sync_with_stdio(false);cin.tie(NULL);cout.tie(NULL)
#define MOD 1000000007
#define MOD1 998244353
#define INF 1e18
#define ln "\n"
#define pb push_back
#define ppb pop_back
#define mp make_pair
#define ff first
#define ss second
#define PI 3.141592653589793238462
#define set_bits __builtin_popcountll
#define sz(x) ((int)(x).size())
#define all(x) (x).begin(), (x).end()
 
typedef long long ll;
typedef unsigned long long ull;
typedef long double lld;
// typedef tree<pair<int, int>, null_type, less<pair<int, int>>, rb_tree_tag, tree_order_statistics_node_update > pbds; // find_by_order, order_of_key
 
#ifndef ONLINE_JUDGE
#define debug(x) cerr << #x <<" "; _print(x); cerr << endl;
#else
#define debug(x)
#endif
 
void _print(ll t) {cerr << t;}
void _print(int t) {cerr << t;}
void _print(string t) {cerr << t;}
void _print(char t) {cerr << t;}
void _print(lld t) {cerr << t;}
void _print(double t) {cerr << t;}
void _print(ull t) {cerr << t;}
 
template <class T, class V> void _print(pair <T, V> p);
template <class T> void _print(vector <T> v);
template <class T> void _print(set <T> v);
template <class T, class V> void _print(map <T, V> v);
template <class T> void _print(multiset <T> v);
template <class T, class V> void _print(pair <T, V> p) {cerr << "{"; _print(p.ff); cerr << ","; _print(p.ss); cerr << "}";}
template <class T> void _print(vector <T> v) {cerr << "[ "; for (T i : v) {_print(i); cerr << " ";} cerr << "]";}
template <class T> void _print(set <T> v) {cerr << "[ "; for (T i : v) {_print(i); cerr << " ";} cerr << "]";}
template <class T> void _print(multiset <T> v) {cerr << "[ "; for (T i : v) {_print(i); cerr << " ";} cerr << "]";}
template <class T, class V> void _print(map <T, V> v) {cerr << "[ "; for (auto i : v) {_print(i); cerr << " ";} cerr << "]";}
//char ch[40000][40000];
void solve() {
 
    ll n, m, c;
    for(int i = 0;;i++) {
        cin >> n >> m >> c;
        if (n == 0 && m == 0 && c == 0) break;
        else {
            int a;
 
 //at first, we have to find out the color of upper left square
            if ((n + m - 1) % 2 == 0) {
                if (c == 0) a = 1;
                else a = 2;
            } else {
                if (c == 0) a = 2;
                else a = 1;
 
            }
 
            //counting how many chess boards can be embedded  in first row--->;
 
            int cnt = 0, cnt1 = 0,sum = 0;
            //for first row--->
            for (int i = a; (i + 7) <= m; i += 2) {
 
                cnt++;
 
            }
            // couting how many chess boards can be embedded in second row--->
 
            if (a == 1) {
                for (int i = 2; (i + 7) <= m; i += 2) {
                    if ((n - 1) >= 8)
                        cnt1++;
 
                }
 
            } else {
                for (int i = 1; (i + 7) <= m; i += 2) {
                    if ((n - 1) >= 8)
                        cnt1++;
                    // debug(i)
                    //debug(i + 7)
                }
 
            }
            // for  how many rows ,we have calculate the chess boards
 
            int b = (n - 8) + 1;
            // to calculate total board numbers(they are repeated)
 
            for (int i = 1; i <= b; i++) {
                if (i % 2) sum = sum + cnt;
                else sum = sum + cnt1;
            }
            cout<<sum<<ln;
 
 
        }
 
    }
 
 
 
 
 
 
 
}
int main() {
    fastio();
    #ifndef ONLINE_JUDGE
    freopen("input.txt", "r", stdin);
 
    freopen("output.txt", "w", stdout);
    freopen("error.txt", "w", stderr);
    #endif
    ll t = 1;
    //cin >> t;
        for(int it=1;it<=t;it++) {
 
        solve();
    }
    return 0;
 
 
}
//https://onlinejudge.org/index.php?option=onlinejudge&Itemid=8&page=show_problem&problem=2172
